"""Initial database schema

Revision ID: e39a50febfe6
Revises: 
Create Date: 2025-07-16 14:30:40.779332

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'e39a50febfe6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('medical_codes',
    sa.Column('code', sa.String(length=20), nullable=False),
    sa.Column('system', sa.Enum('GOZ', 'BEMA', name='codesystem'), nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('base_points', sa.Float(), nullable=True),
    sa.Column('base_fee', sa.Float(), nullable=True),
    sa.Column('category', sa.String(length=100), nullable=True),
    sa.Column('subcategory', sa.String(length=100), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('valid_from', sa.String(length=10), nullable=True),
    sa.Column('valid_until', sa.String(length=10), nullable=True),
    sa.Column('search_terms', sa.Text(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_medical_codes_code'), 'medical_codes', ['code'], unique=False)
    op.create_index(op.f('ix_medical_codes_id'), 'medical_codes', ['id'], unique=False)
    op.create_table('patients',
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=False),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'OTHER', name='gender'), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('phone', sa.String(length=50), nullable=True),
    sa.Column('mobile', sa.String(length=50), nullable=True),
    sa.Column('street', sa.String(length=200), nullable=True),
    sa.Column('house_number', sa.String(length=20), nullable=True),
    sa.Column('postal_code', sa.String(length=10), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('insurance_type', sa.Enum('PUBLIC', 'PRIVATE', 'SELF_PAY', name='insurancetype'), nullable=False),
    sa.Column('insurance_company', sa.String(length=100), nullable=True),
    sa.Column('insurance_number', sa.String(length=50), nullable=True),
    sa.Column('allergies', sa.Text(), nullable=True),
    sa.Column('medications', sa.Text(), nullable=True),
    sa.Column('medical_notes', sa.Text(), nullable=True),
    sa.Column('evident_patient_id', sa.String(length=50), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_patients_evident_patient_id'), 'patients', ['evident_patient_id'], unique=True)
    op.create_index(op.f('ix_patients_id'), 'patients', ['id'], unique=False)
    op.create_table('users',
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'DENTIST', 'ASSISTANT', 'RECEPTIONIST', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('license_number', sa.String(length=50), nullable=True),
    sa.Column('specialization', sa.String(length=100), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('recordings',
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('format', sa.String(length=10), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'TRANSCRIBED', 'FAILED', 'DELETED', name='recordingstatus'), nullable=False),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('sample_rate', sa.Integer(), nullable=True),
    sa.Column('channels', sa.Integer(), nullable=True),
    sa.Column('bitrate', sa.Integer(), nullable=True),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('created_by_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recordings_id'), 'recordings', ['id'], unique=False)
    op.create_table('transcriptions',
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('language', sa.String(length=10), nullable=False),
    sa.Column('model_used', sa.String(length=50), nullable=True),
    sa.Column('confidence_score', sa.Float(), nullable=True),
    sa.Column('processing_time', sa.Float(), nullable=True),
    sa.Column('segments', sa.JSON(), nullable=True),
    sa.Column('medical_terms', sa.JSON(), nullable=True),
    sa.Column('recording_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['recording_id'], ['recordings.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('recording_id')
    )
    op.create_index(op.f('ix_transcriptions_id'), 'transcriptions', ['id'], unique=False)
    op.create_table('treatments',
    sa.Column('treatment_date', sa.DateTime(), nullable=False),
    sa.Column('tooth_numbers', sa.JSON(), nullable=True),
    sa.Column('diagnosis', sa.Text(), nullable=False),
    sa.Column('treatment_description', sa.Text(), nullable=False),
    sa.Column('treatment_plan', sa.Text(), nullable=True),
    sa.Column('next_appointment', sa.DateTime(), nullable=True),
    sa.Column('total_cost', sa.Float(), nullable=True),
    sa.Column('insurance_coverage', sa.Float(), nullable=True),
    sa.Column('patient_payment', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('images', sa.JSON(), nullable=True),
    sa.Column('patient_id', sa.Integer(), nullable=False),
    sa.Column('performed_by_id', sa.Integer(), nullable=False),
    sa.Column('transcription_id', sa.Integer(), nullable=True),
    sa.Column('evident_treatment_id', sa.String(length=50), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['patients.id'], ),
    sa.ForeignKeyConstraint(['performed_by_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['transcription_id'], ['transcriptions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('transcription_id')
    )
    op.create_index(op.f('ix_treatments_evident_treatment_id'), 'treatments', ['evident_treatment_id'], unique=True)
    op.create_index(op.f('ix_treatments_id'), 'treatments', ['id'], unique=False)
    op.create_table('treatment_medical_codes',
    sa.Column('treatment_id', sa.Integer(), nullable=False),
    sa.Column('medical_code_id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['medical_code_id'], ['medical_codes.id'], ),
    sa.ForeignKeyConstraint(['treatment_id'], ['treatments.id'], ),
    sa.PrimaryKeyConstraint('treatment_id', 'medical_code_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('treatment_medical_codes')
    op.drop_index(op.f('ix_treatments_id'), table_name='treatments')
    op.drop_index(op.f('ix_treatments_evident_treatment_id'), table_name='treatments')
    op.drop_table('treatments')
    op.drop_index(op.f('ix_transcriptions_id'), table_name='transcriptions')
    op.drop_table('transcriptions')
    op.drop_index(op.f('ix_recordings_id'), table_name='recordings')
    op.drop_table('recordings')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_patients_id'), table_name='patients')
    op.drop_index(op.f('ix_patients_evident_patient_id'), table_name='patients')
    op.drop_table('patients')
    op.drop_index(op.f('ix_medical_codes_id'), table_name='medical_codes')
    op.drop_index(op.f('ix_medical_codes_code'), table_name='medical_codes')
    op.drop_table('medical_codes')
    # ### end Alembic commands ###
